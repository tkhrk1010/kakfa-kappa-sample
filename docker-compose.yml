version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  postgres:
    build:
      context: db
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: kafka_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  kafka-ui:
    image: provectuslabs/kafka-ui
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "8080:8080"

  event-producer:
    build:
      context: event_producer
      dockerfile: Dockerfile
    depends_on:
      - kafka
    stdin_open: true
    # keep container standby
    tty: true


  long-term-store:
    build:
      context: long_term_store
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - postgres
    tty: true

  speed-layer:
    build:
      context: speed_layer
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - postgres
    tty: true

  analytics-client:
    build:
      context: analytics_client
      dockerfile: Dockerfile
    depends_on:
      - kafka
    tty: true

volumes:
  postgres-data: